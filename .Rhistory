}
count <- cbind(count, id)
count <- as.data.frame(count)
count <- count %>%
mutate(pct = count / sum(count))
merge <- merge(x = df_map, y = count, by = "id", all.x=T)
count
지역.names <- rownames(count)
id <- c()
for(i in 1:length(지역.names)){
id <- c(id, grep(지역.names[i], df_map_info$CTP_KOR_NM))
cat(지역.names[i], "->", id, "\n")
}
count <- cbind(count, id)
count <- as.data.frame(count)
count <- count %>%
mutate(pct = count / sum(count))
merge <- merge(x = df_map, y = count, by = "id", all.x=T)
count
지역.names <- rownames(count)
id <- c()
for(i in 1:length(지역.names)){
id <- c(id, grep(지역.names[i], df_map_info$CTP_KOR_NM))
cat(지역.names[i], "->", id, "\n")
}
count <- cbind(count, id)
count <- as.data.frame(count)
count <- count %>%
mutate(pct = count / sum(count))
merge <- merge(x = df_map, y = count, by = "id", all.x=T)
count
library(haven)
library(dplyr)
foreign <- read_sav("C://LJH/Rexam/R_project/data/2019foreign.sav")
foreign <- as.data.frame(foreign)
foreign3 <- foreign %>%
select(Q10_1B1, Q10_1B2, Q10_1B3, Q10_1B4, Q10_1B5,
Q10_1B6, Q10_1B7, Q10_1B8, Q10_1B9, Q10_1B10,
Q10_1B11, Q10_1B12, Q10_1B13, Q10_1B14, Q10_1B15,
Q10_1B16, Q10_1B17) %>%
rename(서울 = Q10_1B1, 부산 = Q10_1B2, 대구 = Q10_1B3, 인천 = Q10_1B4,
광주 = Q10_1B5, 대전 = Q10_1B6, 울산 = Q10_1B7, 경기 = Q10_1B8,
강원 = Q10_1B9, 충청북도 = Q10_1B10, 충청남도 = Q10_1B11, 전라북도 = Q10_1B12,
전라남도 = Q10_1B13, 경상북도 = Q10_1B14, 경상남도 = Q10_1B15, 제주 = Q10_1B16,
세종 = Q10_1B17)
count <- colSums(foreign3, na.rm = T)
count <- t(t(count))
colnames(count) <- c("count")
# install.packages("rgdal") .shp파일 읽기
library(rgdal)
map <- readOGR("C://LJH/Rexam/R_project/R_project/data/TL_SCCO_CTPRVN.shp")
slotNames(map)
df_map_info <- map@data
head(df_map_info)
# 지도그리기
library(ggplot2)
df_map <- fortify(map)
head(df_map)
ggplot(data = df_map,
aes(x = long, y = lat,
group = group)) +
geom_polygon(aes(fill = id), color="black") +
theme(legend.position = "none")
# 자료 합치기
# grep("강원", df_map_info$CTP_KOR_NM)
# df_map_info[9,]
# df_map_info[9, "CTPRVN_CD"]
지역.names <- rownames(count)
id <- c()
for(i in 1:length(지역.names)){
id <- c(id, grep(지역.names[i], df_map_info$CTP_KOR_NM))
cat(지역.names[i], "->", id, "\n")
}
count <- cbind(count, id)
count <- as.data.frame(count)
count <- count %>%
mutate(pct = count / sum(count))
merge <- merge(x = df_map, y = count, by = "id", all.x=T)
# View(merge)
ggplot() +
geom_polygon(data = merge,
aes(x = long, y = lat, group = group, fill = pct),
color="black")
count
df_map_info
foreign3 <- foreign %>%
select(Q10_1B1, Q10_1B2, Q10_1B3, Q10_1B4, Q10_1B5,
Q10_1B6, Q10_1B7, Q10_1B8, Q10_1B9, Q10_1B10,
Q10_1B11, Q10_1B12, Q10_1B13, Q10_1B14, Q10_1B15,
Q10_1B16, Q10_1B17) %>%
rename(서울특별시 = Q10_1B1, 부산광역시 = Q10_1B2, 대구광역시 = Q10_1B3, 인천광역시 = Q10_1B4,
광주광역시 = Q10_1B5, 대전광역시 = Q10_1B6, 울산광역시 = Q10_1B7, 경기도 = Q10_1B8,
강원도 = Q10_1B9, 충청북도 = Q10_1B10, 충청남도 = Q10_1B11, 전라북도 = Q10_1B12,
전라남도 = Q10_1B13, 경상북도 = Q10_1B14, 경상남도 = Q10_1B15, 제주특별자치도 = Q10_1B16,
세종특별자치시 = Q10_1B17)
count <- colSums(foreign3, na.rm = T)
count <- t(t(count))
colnames(count) <- c("count")
채ㅕㅜㅅ
count
df_map_info
count
지역.names <- rownames(count)
id <- c()
for(i in 1:length(지역.names)){
id <- c(id, grep(지역.names[i], df_map_info$CTP_KOR_NM))
cat(지역.names[i], "->", id, "\n")
}
count <- cbind(count, id)
count <- as.data.frame(count)
count <- count %>%
mutate(pct = count / sum(count))
merge <- merge(x = df_map, y = count, by = "id", all.x=T)
df_map_info
count
ITEM <- c()
for(k in 1:ncol(foreign2)){
ITEM = c(ITEM, foreign2[,k])
}
ID = rep(1:nrow(foreign2),ncol(foreign2))
PLACE_LIST <- data.frame(
ID = ID,
ITEM = ITEM
)
PLACE_LIST <- na.omit(PLACE_LIST)
PLACE_LIST <- merge(PLACE_LIST, Code,
by.x = "ITEM", by.y="No", all =T)
PLACE_LIST %>%
group_by(Name) %>%
summarise(Count = n()) %>%
mutate(Perc = Count/sum(Count)) %>%
arrange(-Perc) %>%
na.omit() %>%
top_n(n=15, wt = Perc) %>%
ggplot() +
geom_bar(aes(x = reorder(Name,Perc), y = Perc, fill = Perc), stat = 'identity') +
geom_text(aes(x = reorder(Name,Perc), y = Perc + 0.01 , label = round(Perc,2))) +
scale_x_discrete(expand = c(0,0)) +
scale_y_continuous(expand = c(0,0),limits = c(0, 0.2)) +
scale_fill_gradientn(colours = c("grey","black")) +
xlab("관광지") +  ylab("퍼센트") + guides(fill = FALSE) +
theme_bw() +
theme(text = element_text(size = 15,face = "bold")) +
coord_flip()
RULE2 %>%
arrange(-support) %>%
ggplot() +
geom_point(aes(x = reorder(Rules,support), y = support ,size = support,col = support),
stat = 'identity') +
scale_color_gradientn(colours = c("#66B2FF","#004C99")) +
scale_size_continuous(range = c(4,10)) +
xlab("지지도") + ylab("규칙") +
guides(size = FALSE, col = FALSE) +
theme_bw() +
theme(text = element_text(size = 15, face = "bold")) +
coord_flip()
rules_0.15 <- apriori(Place.transaction,
parameter = list(support = 0.2,
confidence = 0.3,
minlen = 1))
rule.list_0.15 <- as.data.frame(inspect(rules_0.15))
colnames(rule.list_0.15)[2] = "Direction"
rule.list_0.15_2 <-rule.list_0.15 %>% arrange(-support)
rules_0.15_two <- apriori(Place.transaction,
parameter = list(support= 0.2,
confidence = 0.3,
minlen = 2))
rule.list_0.15_two <- as.data.frame(inspect(rules_0.15_two))
colnames(rule.list_0.15_two)[2] = "Direction"
rule.list_0.15_2_two = rule.list_0.15_two %>% arrange(-support)
# 연관규칙 시각화
rule.list_0.15_2_two %>%
mutate(Rules = paste0(lhs,Direction,rhs)) %>%
top_n(n = 14, wt = support) %>%
arrange(-support) %>%
ggplot() +
geom_point(aes(x = reorder(Rules,support), y = support ,size = support,col = support),
stat = 'identity') +
scale_color_gradientn(colours = c("#66B2FF","#004C99")) +
scale_size_continuous(range = c(4,10)) +
xlab("지지도") + ylab("규칙") +
guides(size = FALSE, col = FALSE) +
theme_bw() +
theme(text = element_text(size = 15, face = "bold")) +
coord_flip()
# 중복제거
RULE <- rule.list_0.15_2_two %>%
mutate(Rules = paste0(lhs,Direction,rhs))
LIST = list()
for (k in 1 : nrow(RULE)){
LIST[[k]] = sort(unlist(strsplit(RULE$Rules[k],"=>")))
}
D_LIST <- duplicated(LIST)
RULE2 <- RULE[D_LIST,]
#중복제거 시각화
RULE2 %>%
arrange(-support) %>%
ggplot() +
geom_point(aes(x = reorder(Rules,support), y = support ,size = support,col = support),
stat = 'identity') +
scale_color_gradientn(colours = c("#66B2FF","#004C99")) +
scale_size_continuous(range = c(4,10)) +
xlab("지지도") + ylab("규칙") +
guides(size = FALSE, col = FALSE) +
theme_bw() +
theme(text = element_text(size = 15, face = "bold")) +
coord_flip()
Place.list = split(PLACE_LIST$Name, PLACE_LIST$ID)
Place.transaction = as(Place.list, "transactions")
Place.matrix = as(Place.transaction,"matrix")
Sums = sort(colSums(Place.matrix), decreasing = T)
Place.matrix = Place.matrix[,names(Sums)]
rules_0.15 <- apriori(Place.transaction,
parameter = list(support = 0.2,
confidence = 0.3,
minlen = 1))
rule.list_0.15 <- as.data.frame(inspect(rules_0.15))
colnames(rule.list_0.15)[2] = "Direction"
rule.list_0.15_2 <-rule.list_0.15 %>% arrange(-support)
rules_0.15_two <- apriori(Place.transaction,
parameter = list(support= 0.2,
confidence = 0.3,
minlen = 2))
rule.list_0.15_two <- as.data.frame(inspect(rules_0.15_two))
colnames(rule.list_0.15_two)[2] = "Direction"
rule.list_0.15_2_two = rule.list_0.15_two %>% arrange(-support)
rule.list_0.15_2_two %>%
mutate(Rules = paste0(lhs,Direction,rhs)) %>%
top_n(n = 14, wt = support) %>%
arrange(-support) %>%
ggplot() +
geom_point(aes(x = reorder(Rules,support), y = support ,size = support,col = support),
stat = 'identity') +
scale_color_gradientn(colours = c("#66B2FF","#004C99")) +
scale_size_continuous(range = c(4,10)) +
xlab("지지도") + ylab("규칙") +
guides(size = FALSE, col = FALSE) +
theme_bw() +
theme(text = element_text(size = 15, face = "bold")) +
coord_flip()
# 중복제거
RULE <- rule.list_0.15_2_two %>%
mutate(Rules = paste0(lhs,Direction,rhs))
LIST = list()
for (k in 1 : nrow(RULE)){
LIST[[k]] = sort(unlist(strsplit(RULE$Rules[k],"=>")))
}
D_LIST <- duplicated(LIST)
RULE2 <- RULE[D_LIST,]
#중복제거 시각화
RULE2 %>%
arrange(-support) %>%
ggplot() +
geom_point(aes(x = reorder(Rules,support), y = support ,size = support,col = support),
stat = 'identity') +
scale_color_gradientn(colours = c("#66B2FF","#004C99")) +
scale_size_continuous(range = c(4,10)) +
xlab("지지도") + ylab("규칙") +
guides(size = FALSE, col = FALSE) +
theme_bw() +
theme(text = element_text(size = 15, face = "bold")) +
coord_flip()
rules_0.15 <- apriori(Place.transaction,
parameter = list(support = 0.2,
confidence = 0.25,
minlen = 1))
rule.list_0.15 <- as.data.frame(inspect(rules_0.15))
colnames(rule.list_0.15)[2] = "Direction"
rule.list_0.15_2 <-rule.list_0.15 %>% arrange(-support)
rules_0.15_two <- apriori(Place.transaction,
parameter = list(support= 0.2,
confidence = 0.25,
minlen = 2))
RULE2 %>%
arrange(-support) %>%
ggplot() +
geom_point(aes(x = reorder(Rules,support), y = support ,size = support,col = support),
stat = 'identity') +
scale_color_gradientn(colours = c("#66B2FF","#004C99")) +
scale_size_continuous(range = c(4,10)) +
xlab("지지도") + ylab("규칙") +
guides(size = FALSE, col = FALSE) +
theme_bw() +
theme(text = element_text(size = 15, face = "bold")) +
coord_flip()
plot(rules_0.15,
method = "graph",
control = list(type="items"),
vertex.label.cex = 0.7,
edge.arrow.size = 0.3,
edge.arrow.width = 2)
library(arules)
library(arulesViz)
plot(rules_0.15,
method = "graph",
control = list(type="items"),
vertex.label.cex = 0.7,
edge.arrow.size = 0.3,
edge.arrow.width = 2)
rules_0.15 <- apriori(Place.transaction,
parameter = list(support = 0.15,
confidence = 0.2,
minlen = 1))
rule.list_0.15 <- as.data.frame(inspect(rules_0.15))
colnames(rule.list_0.15)[2] = "Direction"
rule.list_0.15_2 <-rule.list_0.15 %>% arrange(-support)
rules_0.15_two <- apriori(Place.transaction,
parameter = list(support= 0.15,
confidence = 0.2,
minlen = 2))
rule.list_0.15_2_two %>%
mutate(Rules = paste0(lhs,Direction,rhs)) %>%
top_n(n = 14, wt = support) %>%
arrange(-support) %>%
ggplot() +
geom_point(aes(x = reorder(Rules,support), y = support ,size = support,col = support),
stat = 'identity') +
scale_color_gradientn(colours = c("#66B2FF","#004C99")) +
scale_size_continuous(range = c(4,10)) +
xlab("지지도") + ylab("규칙") +
guides(size = FALSE, col = FALSE) +
theme_bw() +
theme(text = element_text(size = 15, face = "bold")) +
coord_flip()
# 중복제거
RULE <- rule.list_0.15_2_two %>%
mutate(Rules = paste0(lhs,Direction,rhs))
LIST = list()
for (k in 1 : nrow(RULE)){
LIST[[k]] = sort(unlist(strsplit(RULE$Rules[k],"=>")))
}
D_LIST <- duplicated(LIST)
RULE2 <- RULE[D_LIST,]
#중복제거 시각화
RULE2 %>%
arrange(-support) %>%
ggplot() +
geom_point(aes(x = reorder(Rules,support), y = support ,size = support,col = support),
stat = 'identity') +
scale_color_gradientn(colours = c("#66B2FF","#004C99")) +
scale_size_continuous(range = c(4,10)) +
xlab("지지도") + ylab("규칙") +
guides(size = FALSE, col = FALSE) +
theme_bw() +
theme(text = element_text(size = 15, face = "bold")) +
coord_flip()
setwd("C://LJH/Suwon_Security")
single_person <- read.csv("C://LHJ/Suwon_Security/data/33.4개시도_1인가구.csv")
single_person <- read.csv("C://LHJ/Suwon_Security/data/33.4개시도_1인가구수.csv")
single_person <- read.csv("~data/33.4개시도_1인가구수.csv")
single_person <- read.csv("C://LJH/Suwon_Security/data/33.4개시도_1인가구수.csv")
single_person <- read.csv("C://LJH/Suwon_Security/data/33.4개시도_1인가구수.csv",header=T)
single_person <- read.csv("C://LJH/Suwon_Security/data/33.4개시도_1인가구수.csv",header=T,encoding=ansi)
single_person <- read.csv("C://LJH/Suwon_Security/data/33.4개시도_1인가구수.csv",header=T,encoding="ansi")
single_person <- read.csv("C://LJH/Suwon_Security/data/33.4개시도_1인가구수.csv",header=T,encoding="UTF-8")
setwd("C://LJH/Suwon_Security")
single_person <- read.csv(file="C://LJH/Suwon_Security/data/33.4개시도_1인가구수.csv", header = T, encoding = "UTF-8")
single_person <- read.csv(file="C://LJH/Suwon_Security/data/4개시도_1인가구.csv",header=T,
encoding="UTF-8")
single_person <- read.csv(file="C://LJH/Suwon_Security/data/4개시도_1인가구수.csv",header=T,
encoding="UTF-8")
single_person <- read.csv(file="C://LJH/Suwon_Security/data/4개시도_1인가구수.csv",header=T,
encoding="ANSI")
g_place<-read.csv(file="C://LJH/Suwon_Security/data/2016~2019_서울시_5대범죄_발생장소별_발생현황.csv",
header=T)
head(g_place)
place_2019<-g_place[g_place$기간==2019]
place_2019<-g_place[g_place$"기간"==2019]
head(place_2019)
place_2019<-g_place[g_place$기간=="2019"]
g_place$기간
place_2019<-g_place[g_place$기간=="2019",]
head(place_2019)
crime <-("살인","살인","살인","살인","살인","살인","살인","살인","살인","살인","살인","살인","살인",
"강도","강도","강도","강도","강도","강도","강도","강도","강도","강도","강도","강도","강도",
"성범죄","성범죄","성범죄","성범죄","성범죄","성범죄","성범죄","성범죄","성범죄","성범죄","성범죄","성범죄","성범죄",
"절도","절도","절도","절도","절도","절도","절도","절도","절도","절도","절도","절도","절도",
"폭력","폭력","폭력","폭력","폭력","폭력","폭력","폭력","폭력","폭력","폭력","폭력","폭력")
place <-("아파트","연립주택","단독주택","노상","상점","숙박업소","목욕탕","유흥접객업소","사무실","역대합실","교통수단","유원지","학교",
"아파트","연립주택","단독주택","노상","상점","숙박업소","목욕탕","유흥접객업소","사무실","역대합실","교통수단","유원지","학교"
"아파트","연립주택","단독주택","노상","상점","숙박업소","목욕탕","유흥접객업소","사무실","역대합실","교통수단","유원지","학교"
"아파트","연립주택","단독주택","노상","상점","숙박업소","목욕탕","유흥접객업소","사무실","역대합실","교통수단","유원지","학교"
"아파트","연립주택","단독주택","노상","상점","숙박업소","목욕탕","유흥접객업소","사무실","역대합실","교통수단","유원지","학교")
freq<-(25,36,26,1,7,9,4,0,0,2,0,0,26,
7,12,36,22,7,19,4,1,3,2,0,1,22
533,552,946,178,528,968,128,255,966,54,49,3,1309,
2455,2163,10198,8464,1297,3481,626,593,1156,649,363,1104,9655,
5979,5994,21089,1427,558,5248,1141,675,1123,541,273,91,10174)
df<-data.frame(crime,place,freq)
df
crime <-c("살인","살인","살인","살인","살인","살인","살인","살인","살인","살인","살인","살인","살인",
"강도","강도","강도","강도","강도","강도","강도","강도","강도","강도","강도","강도","강도",
"성범죄","성범죄","성범죄","성범죄","성범죄","성범죄","성범죄","성범죄","성범죄","성범죄","성범죄","성범죄","성범죄",
"절도","절도","절도","절도","절도","절도","절도","절도","절도","절도","절도","절도","절도",
"폭력","폭력","폭력","폭력","폭력","폭력","폭력","폭력","폭력","폭력","폭력","폭력","폭력")
place <-c("아파트","연립주택","단독주택","노상","상점","숙박업소","목욕탕","유흥접객업소","사무실","역대합실","교통수단","유원지","학교",
"아파트","연립주택","단독주택","노상","상점","숙박업소","목욕탕","유흥접객업소","사무실","역대합실","교통수단","유원지","학교"
"아파트","연립주택","단독주택","노상","상점","숙박업소","목욕탕","유흥접객업소","사무실","역대합실","교통수단","유원지","학교"
"아파트","연립주택","단독주택","노상","상점","숙박업소","목욕탕","유흥접객업소","사무실","역대합실","교통수단","유원지","학교"
"아파트","연립주택","단독주택","노상","상점","숙박업소","목욕탕","유흥접객업소","사무실","역대합실","교통수단","유원지","학교")
freq<- c(25,36,26,1,7,9,4,0,0,2,0,0,26,
7,12,36,22,7,19,4,1,3,2,0,1,22
533,552,946,178,528,968,128,255,966,54,49,3,1309,
2455,2163,10198,8464,1297,3481,626,593,1156,649,363,1104,9655,
5979,5994,21089,1427,558,5248,1141,675,1123,541,273,91,10174)
df<-data.frame(crime,place,freq)
df
crime <-c("살인","살인","살인","살인","살인","살인","살인","살인","살인","살인","살인","살인","살인",
"강도","강도","강도","강도","강도","강도","강도","강도","강도","강도","강도","강도","강도",
"성범죄","성범죄","성범죄","성범죄","성범죄","성범죄","성범죄","성범죄","성범죄","성범죄","성범죄","성범죄","성범죄",
"절도","절도","절도","절도","절도","절도","절도","절도","절도","절도","절도","절도","절도",
"폭력","폭력","폭력","폭력","폭력","폭력","폭력","폭력","폭력","폭력","폭력","폭력","폭력")
place <-c("아파트","연립주택","단독주택","노상","상점","숙박업소","목욕탕","유흥접객업소","사무실","역대합실","교통수단","유원지","학교",
"아파트","연립주택","단독주택","노상","상점","숙박업소","목욕탕","유흥접객업소","사무실","역대합실","교통수단","유원지","학교"
"아파트","연립주택","단독주택","노상","상점","숙박업소","목욕탕","유흥접객업소","사무실","역대합실","교통수단","유원지","학교"
"아파트","연립주택","단독주택","노상","상점","숙박업소","목욕탕","유흥접객업소","사무실","역대합실","교통수단","유원지","학교"
"아파트","연립주택","단독주택","노상","상점","숙박업소","목욕탕","유흥접객업소","사무실","역대합실","교통수단","유원지","학교")
place <-c("아파트","연립주택","단독주택","노상","상점","숙박업소","목욕탕","유흥접객업소","사무실","역대합실","교통수단","유원지","학교",
"아파트","연립주택","단독주택","노상","상점","숙박업소","목욕탕","유흥접객업소","사무실","역대합실","교통수단","유원지","학교",
"아파트","연립주택","단독주택","노상","상점","숙박업소","목욕탕","유흥접객업소","사무실","역대합실","교통수단","유원지","학교",
"아파트","연립주택","단독주택","노상","상점","숙박업소","목욕탕","유흥접객업소","사무실","역대합실","교통수단","유원지","학교",
"아파트","연립주택","단독주택","노상","상점","숙박업소","목욕탕","유흥접객업소","사무실","역대합실","교통수단","유원지","학교")
freq<- c(25,36,26,1,7,9,4,0,0,2,0,0,26,
7,12,36,22,7,19,4,1,3,2,0,1,22,
533,552,946,178,528,968,128,255,966,54,49,3,1309,
2455,2163,10198,8464,1297,3481,626,593,1156,649,363,1104,9655,
5979,5994,21089,1427,558,5248,1141,675,1123,541,273,91,10174)
df<-data.frame(crime,place,freq)
head(df)
df
ggplot2(df,aes(x=crime,y=freq,fill=place))+
geom_bar(stat="identity")
library(ggplot2)
ggplot2(df,aes(x=crime,y=freq,fill=place))+
geom_bar(stat="identity")
ggplot(df,aes(x=crime,y=freq,fill=place))+
geom_bar(stat="identity")
ggplot(df.aes(x=crime,y=freq,group=place))+
geom_col(aes(fill=freq),position = "dodge")+
geom_text(aes(label=freq),position = position_dodge(0.9))+
theme(axis.text.x = element_text(angle = 45,colour = "blue",
size = 10,hjust=1,vjust = 1))
ggplot(df,aes(x=crime,y=freq,group=place))+
geom_col(aes(fill=freq),position = "dodge")+
geom_text(aes(label=freq),position = position_dodge(0.9))+
theme(axis.text.x = element_text(angle = 45,colour = "blue",
size = 10,hjust=1,vjust = 1))
ggplot(df,aes(x=crime,y=freq,fill=place))+
geom_bar(stat="identity")+
geom_text(aes(y=freq,label=freq),position = position_stack(vjust=0.5),col="white",size=3)
library(plyr)
df_percent<-ddply(df,"crime",transform,persent_freq=freq/sum(freq)*100)
df_percent
ggplot(df,aes(x=crime,y=percent,fill=place))+
geom_bar(stat="identity")+
geom_text(aes(y=percent,label=percent),position = position_stack(vjust=0.5),col="white",size=3)
ggplot(df,aes(x=crime,y=percent,fill=place))+
geom_bar(stat="identity")+
geom_text(aes(y=percent,label=percent_freq),position = position_stack(vjust=0.5),col="white",size=3)
df<-ddply(df,"crime",transform,persent_freq=freq/sum(freq)*100)
ggplot(df,aes(x=crime,y=percent,fill=place))+
geom_bar(stat="identity")+
geom_text(aes(y=percent,label=percent_freq),position = position_stack(vjust=0.5),col="white",size=3)
df<-ddply(df,"crime",transform,persent=freq/sum(freq)*100)
ggplot(df,aes(x=crime,y=percent,fill=place))+
geom_bar(stat="identity")+
geom_text(aes(y=percent,label=percent),position = position_stack(vjust=0.5),col="white",size=3)
df<-ddply(df,"crime",transform,percent=freq/sum(freq)*100)
ggplot(df,aes(x=crime,y=percent,fill=place))+
geom_bar(stat="identity")+
geom_text(aes(y=percent,label=percent),position = position_stack(vjust=0.5),col="white",size=3)
ggplot(df,aes(x=crime,y=percent,fill=place))+
geom_bar(stat="identity",colour="black",position = "fill")+
geom_text(aes(y=percent,label=percent),position = position_stack(vjust=0.5),col="white",size=3)
ggplot(df,aes(x=crime,y=percent,fill=place))+
geom_bar(stat="identity",colour="black")+
geom_text(aes(y=percent,label=percent),position = position_stack(vjust=0.5),col="white",size=3)
install.packages("geoband")
df_2<-GetCompasData('SBJ_2109_001', '1', '1.수원시_112신고이력(격자_관할경계매핑).csv')
library(geoband)
install.packages("geoband")
library(installr)
updateR()
updateR()
library(dplyr)
library(plyr)
library(ggmap)
library(ggplot2)
df_children <- read.csv("C://LJH/Suwon_Security/data/4개시도_어린이놀이시설현황.csv", header=T, encoding="ANSI")
seoul_child <- df_children %>%
filter(grepl("서울",street_address))
s_place <- count(seoul_child,"place")
s_perc <- s_place$freq/sum(s_place$freq)*100
s_perc <- round(s_perc,2)
s_place <- cbind(s_place,s_perc)
#서울시 상위 6개 장소 추출
s_top6 <- s_place %>%
arrange(desc(freq))%>%
head(6)
suwon_child <- df_children %>%
filter(grepl("경기",street_address))
suwon_place <- count(suwon_child,"place")
suwon_perc <- suwon_place$freq/sum(suwon_place$freq)
suwon_place <- round(suwon_perc,2)
suwon_place <- cbind(suwon_place,suwon_perc)
#수원시 상위 6개 추출
suwon_top6 <- suwon_place %>%
arrange(desc(freq))%>%
head(6)
suwon_place
View(suwon_child)
df_children <- read.csv("C://LJH/Suwon_Security/data/4개시도_어린이놀이시설현황.csv", header=T, encoding="ANSI")
